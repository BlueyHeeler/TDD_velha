        -:    0:Source:velha.cpp
        -:    1:#include "velha.hpp"
        -:    2:#include <bits/stdc++.h>
        -:    3:using namespace std;
        -:    4:
      105:    5:int VerificaDiagonal(int row, int column,
        -:    6:					 vector<vector<int>> velha, int jogador) {
      105:    7:	return (row == column && velha[row][column] == jogador);
        -:    8:}
        -:    9:
      105:   10:int VerificaDiagonalSec(int row, int column,
        -:   11:							   vector<vector<int>> velha, int jogador) {
      105:   12:	return (row + column == 2) && velha[row][column] == jogador;
        -:   13:}
        -:   14:
      105:   15:int VerificaFileira(int row, int column,
        -:   16:					vector<vector<int>> velha, int jogador) {
      105:   17:	return velha[row][column] == jogador;
        -:   18:}
        -:   19:
      105:   20:int VerificaColuna(int column, int row,
        -:   21:				   vector<vector<int>> velha, int jogador) {
      105:   22:	return velha[column][row] == jogador;
        -:   23:}
        -:   24:
       42:   25:int Vitoria(int coluna, int fileira, int diagonal1, int diagonal2){
       42:   26:	if(coluna == 3 || fileira == 3 || diagonal1 == 3 || diagonal2 == 3)
        6:   27:		return 1;
       36:   28:	return 0;
        -:   29:}
        -:   30:
        9:   31:int JogoInvalido(int contJogador1, int contJogador2){
        9:   32:	return abs(contJogador1 - contJogador2) >= 2;
        -:   33:}
        -:   34:
        2:   35:int JogoIndefinido(int contJogador1, int contJogador2){
        2:   36:	return contJogador1 + contJogador2 <= 8;
        -:   37:}
        -:   38:
       11:   39:void ContadorDeJogadores(vector<vector<int>> velha, int &contJogador1, int &contJogador2){
       44:   40:	for (vector<int> rowVelha: velha){
      132:   41:		for (int tipoJogado: rowVelha){
        -:   42:
       99:   43:			if(tipoJogado == 1)
       32:   44:				contJogador1 += 1;
       99:   45:			if(tipoJogado == 2)
       28:   46:				contJogador2 += 1;
        -:   47:		}
       33:   48:	}
       11:   49:}
        -:   50:
        9:   51:int VerificaVelha(vector<vector<int>> velha) {
        9:   52:	int diagonal1 = 0;
        9:   53:	int diagonal2 = 0;
        9:   54:	int coluna = 0;
        9:   55:	int fileira = 0;
        9:   56:	int contJogador1 = 0;
        9:   57:	int contJogador2 = 0;
        -:   58:
        9:   59:	ContadorDeJogadores(velha, contJogador1, contJogador2);
        9:   60:	if(JogoInvalido(contJogador1, contJogador2))
        1:   61:		return -2;
        8:   62:	contJogador1 = 0;
        8:   63:	contJogador2 = 0;
        -:   64:
       15:   65:	for (int jogador = 1; jogador <= 2; jogador++) {
       42:   66:		for (int row = 0; row < 3; row++) {
      140:   67:			for (int column = 0; column < 3; column++) {
      105:   68:				if (VerificaDiagonal(row, column, velha, jogador))
       14:   69:					diagonal1++;
        -:   70:
      105:   71:				if (VerificaDiagonalSec(row, column, velha, jogador))
       14:   72:					diagonal2++;
        -:   73:
      105:   74:				if (VerificaFileira(row, column, velha, jogador))
       35:   75:					fileira++;
        -:   76:
      105:   77:				if (VerificaColuna(column, row, velha, jogador))
       35:   78:					coluna++;
        -:   79:			}
        -:   80:
       35:   81:			if (Vitoria(coluna, fileira, diagonal1, diagonal2))
        6:   82:				return jogador;
        -:   83:
       29:   84:			coluna = 0;
       29:   85:			fileira = 0;
        -:   86:		}
        -:   87:
        7:   88:		if (Vitoria(coluna, fileira, diagonal1, diagonal2))
    #####:   89:			return jogador;
        -:   90:
        7:   91:		diagonal1 = 0;
        7:   92:		diagonal2 = 0;
        -:   93:	}
        2:   94:	ContadorDeJogadores(velha, contJogador1, contJogador2);
        -:   95:
        2:   96:	if(JogoIndefinido(contJogador1, contJogador2))
        1:   97:		return -1;
        -:   98:
        1:   99:	return 0;
        -:  100:}
        -:  101:
        -:  102:
        -:  103:
